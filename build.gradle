plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'checkstyle'
}

group = 'net.stepbooks'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0
            }
        }
    }
}

checkstyle {
    configFile = file('checkstyle.xml')
    toolVersion = '10.12.4'
    checkstyleMain.source = "src/main/java/net/stepbooks"
}


repositories {
//    maven{url 'https://maven.aliyun.com/repository/central'}
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'com.alibaba.cola:cola-component-statemachine:4.3.2'
    implementation 'org.redisson:redisson-spring-boot-starter:3.23.5'
    implementation 'org.apache.tika:tika-core:2.9.1'
    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'org.modelmapper:modelmapper:2.4.0'
    implementation 'com.github.wechatpay-apiv3:wechatpay-java:0.2.12'
    implementation 'io.github.openfeign:feign-jackson:13.1'
//    implementation 'org.apache.poi:poi:5.0.0'z
//    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    implementation 'com.github.ozlerhakan:poiji:4.1.1'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.13'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.5.3.2'
    implementation 'org.passay:passay:1.6.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:4.11'
    implementation 'org.codehaus.janino:janino:3.1.6'
    implementation 'jmimemagic:jmimemagic:0.1.2'
//    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'cn.xfyun:websdk-java-speech:2.0.2'
    implementation 'com.opencsv:opencsv:5.7.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
//    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    }
}


test {
    finalizedBy(jacocoTestReport, jacocoTestCoverageVerification)
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'ca/digitalstar/sat/merchant/satmerchantbackend/SatMerchantBackendApplication*',
            ])
        })
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            limit {
                minimum = 0
            }
        }
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'ca/digitalstar/sat/merchant/satmerchantbackend/SatMerchantBackendApplication*',
            ])
        })
    }
}

task initGitHooks(group: "gitmessage") {
    ['sh', '-c', 'git config core.hooksPath .githooks'].execute().text.trim()
}

test {
    useJUnitPlatform()
}
